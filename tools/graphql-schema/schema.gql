# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type CategoryCountAggregate {
  id: Int!
  name: Int!
  description: Int!
  _all: Int!
}

type CategoryCount {
  subCategories: Int!
}

type CategoryMaxAggregate {
  id: String
  name: String
  description: String
}

type CategoryMinAggregate {
  id: String
  name: String
  description: String
}

type Category {
  id: ID!
  name: String!
  description: String
  subCategories: [SubCategory!]
  _count: CategoryCount!
}

type CustomizationAvgAggregate {
  coffeeStrengthType: Float
}

type CustomizationCountAggregate {
  id: Int!
  coffeeType: Int!
  coffeeStrengthType: Int!
  milkType: Int!
  milkTemp: Int!
  menuItemId: Int!
  _all: Int!
}

type CustomizationMaxAggregate {
  id: String
  coffeeType: String
  coffeeStrengthType: Int
  milkType: String
  milkTemp: String
  menuItemId: String
}

type CustomizationMinAggregate {
  id: String
  coffeeType: String
  coffeeStrengthType: Int
  milkType: String
  milkTemp: String
  menuItemId: String
}

type CustomizationSumAggregate {
  coffeeStrengthType: Int
}

type Customization {
  id: ID!
  coffeeType: String!
  coffeeStrengthType: Int!
  milkType: String!
  milkTemp: String!
  menuItemId: String!
  menuItem: MenuItem!
}

type HomeBlockCountAggregate {
  id: Int!
  title: Int!
  description: Int!
  button: Int!
  imagePath: Int!
  navigationPath: Int!
  rgbBackgroundId: Int!
  _all: Int!
}

type HomeBlockMaxAggregate {
  id: String
  title: String
  description: String
  button: String
  imagePath: String
  navigationPath: String
  rgbBackgroundId: String
}

type HomeBlockMinAggregate {
  id: String
  title: String
  description: String
  button: String
  imagePath: String
  navigationPath: String
  rgbBackgroundId: String
}

type HomeBlock {
  id: ID!
  title: String!
  description: String!
  button: String!
  imagePath: String!
  navigationPath: String!
  rgbBackgroundId: String!
  rgbBackground: RgbBackground!
}

type MenuItemAvgAggregate {
  calories: Float
}

type MenuItemCountAggregate {
  id: Int!
  name: Int!
  description: Int!
  image_path: Int!
  calories: Int!
  subCategoryId: Int!
  _all: Int!
}

type MenuItemCount {
  sizes: Int!
  customizations: Int!
}

type MenuItemMaxAggregate {
  id: String
  name: String
  description: String
  image_path: String
  calories: Int
  subCategoryId: String
}

type MenuItemMinAggregate {
  id: String
  name: String
  description: String
  image_path: String
  calories: Int
  subCategoryId: String
}

type MenuItemSumAggregate {
  calories: Int
}

type MenuItem {
  id: ID!
  name: String!
  description: String
  image_path: String
  calories: Int
  subCategoryId: String!
  subCategory: SubCategory!
  sizes: [Size!]
  customizations: [Customization!]
  _count: MenuItemCount!
}

type RgbBackgroundAvgAggregate {
  r: Float
  g: Float
  b: Float
  a: Float
}

type RgbBackgroundCountAggregate {
  id: Int!
  r: Int!
  g: Int!
  b: Int!
  a: Int!
  hash: Int!
  _all: Int!
}

type RgbBackgroundMaxAggregate {
  id: String
  r: Int
  g: Int
  b: Int
  a: Float
  hash: String
}

type RgbBackgroundMinAggregate {
  id: String
  r: Int
  g: Int
  b: Int
  a: Float
  hash: String
}

type RgbBackgroundSumAggregate {
  r: Int
  g: Int
  b: Int
  a: Float
}

type RgbBackground {
  id: ID!
  r: Int!
  g: Int!
  b: Int!
  a: Float
  hash: String
  homeBlock: HomeBlock
}

type SizeAvgAggregate {
  volume: Float
}

type SizeCountAggregate {
  id: Int!
  name: Int!
  volume: Int!
  menuItemId: Int!
  _all: Int!
}

type SizeMaxAggregate {
  id: String
  name: String
  volume: Int
  menuItemId: String
}

type SizeMinAggregate {
  id: String
  name: String
  volume: Int
  menuItemId: String
}

type SizeSumAggregate {
  volume: Int
}

type Size {
  id: ID!
  name: String!
  volume: Int!
  menuItemId: String!
  menuItem: MenuItem!
}

type SubCategoryCountAggregate {
  id: Int!
  name: Int!
  path: Int!
  image_path: Int!
  description: Int!
  categoryId: Int!
  _all: Int!
}

type SubCategoryCount {
  menuItems: Int!
}

type SubCategoryMaxAggregate {
  id: String
  name: String
  path: String
  image_path: String
  description: String
  categoryId: String
}

type SubCategoryMinAggregate {
  id: String
  name: String
  path: String
  image_path: String
  description: String
  categoryId: String
}

type SubCategory {
  id: ID!
  name: String!
  path: String
  image_path: String
  description: String
  categoryId: String!
  category: Category!
  menuItems: [MenuItem!]
  _count: SubCategoryCount!
}

type UserCountAggregate {
  id: Int!
  email: Int!
  name: Int!
  _all: Int!
}

type UserMaxAggregate {
  id: String
  email: String
  name: String
}

type UserMinAggregate {
  id: String
  email: String
  name: String
}

type User {
  id: ID!
  email: String!
  name: String
}

type Query {
  users: [User!]!
  me(where: UserWhereUniqueInput!): User!
  homeBlocks: [HomeBlock!]!
  homeBlock(where: HomeBlockWhereUniqueInput!): HomeBlock!
  categories: [Category!]!
  category(where: CategoryWhereUniqueInput!): Category!
  items: [MenuItem!]!
  item(where: MenuItemWhereUniqueInput!): MenuItem!
  subCategories: [SubCategory!]!
  subCategory(where: SubCategoryWhereUniqueInput!): SubCategory!
  sizes: [Size!]!
  size(where: SizeWhereUniqueInput!): Size!
  customization(where: CustomizationWhereUniqueInput!): Customization!
}

input UserWhereUniqueInput {
  id: String
  email: String
  AND: [UserWhereInput!]
  OR: [UserWhereInput!]
  NOT: [UserWhereInput!]
  name: StringFilter
  password: StringFilter
}

input UserWhereInput {
  AND: [UserWhereInput!]
  OR: [UserWhereInput!]
  NOT: [UserWhereInput!]
  id: StringFilter
  email: StringFilter
  name: StringFilter
  password: StringFilter
}

input StringFilter {
  equals: String
  in: [String!]
  notIn: [String!]
  lt: String
  lte: String
  gt: String
  gte: String
  contains: String
  startsWith: String
  endsWith: String
  mode: QueryMode
  not: StringFilter
}

enum QueryMode {
  default
  insensitive
}

input HomeBlockWhereUniqueInput {
  id: String
  rgbBackgroundId: String
  AND: [HomeBlockWhereInput!]
  OR: [HomeBlockWhereInput!]
  NOT: [HomeBlockWhereInput!]
  title: StringFilter
  description: StringFilter
  button: StringFilter
  imagePath: StringFilter
  navigationPath: StringFilter
  rgbBackground: RgbBackgroundRelationFilter
}

input HomeBlockWhereInput {
  AND: [HomeBlockWhereInput!]
  OR: [HomeBlockWhereInput!]
  NOT: [HomeBlockWhereInput!]
  id: StringFilter
  title: StringFilter
  description: StringFilter
  button: StringFilter
  imagePath: StringFilter
  navigationPath: StringFilter
  rgbBackgroundId: StringFilter
  rgbBackground: RgbBackgroundRelationFilter
}

input RgbBackgroundRelationFilter {
  is: RgbBackgroundWhereInput
  isNot: RgbBackgroundWhereInput
}

input RgbBackgroundWhereInput {
  AND: [RgbBackgroundWhereInput!]
  OR: [RgbBackgroundWhereInput!]
  NOT: [RgbBackgroundWhereInput!]
  id: StringFilter
  r: IntFilter
  g: IntFilter
  b: IntFilter
  a: FloatFilter
  hash: StringFilter
  homeBlock: HomeBlockRelationFilter
}

input IntFilter {
  equals: Int
  in: [Int!]
  notIn: [Int!]
  lt: Int
  lte: Int
  gt: Int
  gte: Int
  not: IntFilter
}

input FloatFilter {
  equals: Float
  in: [Float!]
  notIn: [Float!]
  lt: Float
  lte: Float
  gt: Float
  gte: Float
  not: FloatFilter
}

input HomeBlockRelationFilter {
  is: HomeBlockWhereInput
  isNot: HomeBlockWhereInput
}

input CategoryWhereUniqueInput {
  id: String
  name: String
  AND: [CategoryWhereInput!]
  OR: [CategoryWhereInput!]
  NOT: [CategoryWhereInput!]
  description: StringFilter
  subCategories: SubCategoryListRelationFilter
}

input CategoryWhereInput {
  AND: [CategoryWhereInput!]
  OR: [CategoryWhereInput!]
  NOT: [CategoryWhereInput!]
  id: StringFilter
  name: StringFilter
  description: StringFilter
  subCategories: SubCategoryListRelationFilter
}

input SubCategoryListRelationFilter {
  every: SubCategoryWhereInput
  some: SubCategoryWhereInput
  none: SubCategoryWhereInput
}

input SubCategoryWhereInput {
  AND: [SubCategoryWhereInput!]
  OR: [SubCategoryWhereInput!]
  NOT: [SubCategoryWhereInput!]
  id: StringFilter
  name: StringFilter
  path: StringFilter
  image_path: StringFilter
  description: StringFilter
  categoryId: StringFilter
  category: CategoryRelationFilter
  menuItems: MenuItemListRelationFilter
}

input CategoryRelationFilter {
  is: CategoryWhereInput
  isNot: CategoryWhereInput
}

input MenuItemListRelationFilter {
  every: MenuItemWhereInput
  some: MenuItemWhereInput
  none: MenuItemWhereInput
}

input MenuItemWhereInput {
  AND: [MenuItemWhereInput!]
  OR: [MenuItemWhereInput!]
  NOT: [MenuItemWhereInput!]
  id: StringFilter
  name: StringFilter
  description: StringFilter
  image_path: StringFilter
  calories: IntFilter
  subCategoryId: StringFilter
  subCategory: SubCategoryRelationFilter
  sizes: SizeListRelationFilter
  customizations: CustomizationListRelationFilter
}

input SubCategoryRelationFilter {
  is: SubCategoryWhereInput
  isNot: SubCategoryWhereInput
}

input SizeListRelationFilter {
  every: SizeWhereInput
  some: SizeWhereInput
  none: SizeWhereInput
}

input SizeWhereInput {
  AND: [SizeWhereInput!]
  OR: [SizeWhereInput!]
  NOT: [SizeWhereInput!]
  id: StringFilter
  name: StringFilter
  volume: IntFilter
  menuItemId: StringFilter
  menuItem: MenuItemRelationFilter
}

input MenuItemRelationFilter {
  is: MenuItemWhereInput
  isNot: MenuItemWhereInput
}

input CustomizationListRelationFilter {
  every: CustomizationWhereInput
  some: CustomizationWhereInput
  none: CustomizationWhereInput
}

input CustomizationWhereInput {
  AND: [CustomizationWhereInput!]
  OR: [CustomizationWhereInput!]
  NOT: [CustomizationWhereInput!]
  id: StringFilter
  coffeeType: StringFilter
  coffeeStrengthType: IntFilter
  milkType: StringFilter
  milkTemp: StringFilter
  menuItemId: StringFilter
  menuItem: MenuItemRelationFilter
}

input MenuItemWhereUniqueInput {
  id: String
  AND: [MenuItemWhereInput!]
  OR: [MenuItemWhereInput!]
  NOT: [MenuItemWhereInput!]
  name: StringFilter
  description: StringFilter
  image_path: StringFilter
  calories: IntFilter
  subCategoryId: StringFilter
  subCategory: SubCategoryRelationFilter
  sizes: SizeListRelationFilter
  customizations: CustomizationListRelationFilter
}

input SubCategoryWhereUniqueInput {
  id: String
  name: String
  AND: [SubCategoryWhereInput!]
  OR: [SubCategoryWhereInput!]
  NOT: [SubCategoryWhereInput!]
  path: StringFilter
  image_path: StringFilter
  description: StringFilter
  categoryId: StringFilter
  category: CategoryRelationFilter
  menuItems: MenuItemListRelationFilter
}

input SizeWhereUniqueInput {
  id: String
  AND: [SizeWhereInput!]
  OR: [SizeWhereInput!]
  NOT: [SizeWhereInput!]
  name: StringFilter
  volume: IntFilter
  menuItemId: StringFilter
  menuItem: MenuItemRelationFilter
}

input CustomizationWhereUniqueInput {
  id: String
  AND: [CustomizationWhereInput!]
  OR: [CustomizationWhereInput!]
  NOT: [CustomizationWhereInput!]
  coffeeType: StringFilter
  coffeeStrengthType: IntFilter
  milkType: StringFilter
  milkTemp: StringFilter
  menuItemId: StringFilter
  menuItem: MenuItemRelationFilter
}

type Mutation {
  createUser(data: UserCreateInput!): User!
  updateUser(data: UserUpdateInput!, where: UserWhereUniqueInput!): User!
  removeUser(where: UserWhereUniqueInput!): User!
  createHomeBlock(data: HomeBlockCreateInput!): HomeBlock!
  updateHomeBlock(data: HomeBlockUpdateInput!, where: HomeBlockWhereUniqueInput!): HomeBlock!
  removeHomeBlock(where: HomeBlockWhereUniqueInput!): HomeBlock!
  login(loginInput: LoginInput!): User!
  signUp(signUpInput: SignUpInput!): User!
  createCategory(data: CategoryCreateInput!): Category!
  updateCategory(data: CategoryUpdateInput!, where: CategoryWhereUniqueInput!): Category!
  removeCategory(id: Int!): Category!
  createMenuItem(data: MenuItemCreateInput!): MenuItem!
  updateMenuItem(data: MenuItemUpdateInput!, where: MenuItemWhereUniqueInput!): MenuItem!
  removeMenuItem(where: MenuItemWhereUniqueInput!): MenuItem!
  createSubCategory(data: SubCategoryCreateInput!): SubCategory!
  updateSubCategory(data: SubCategoryUpdateInput!, where: SubCategoryWhereUniqueInput!): SubCategory!
  removeSubCategory(where: CategoryWhereUniqueInput!): SubCategory!
  createSize(data: SizeCreateInput!): Size!
  updateSize(data: SizeUpdateInput!, where: SizeWhereUniqueInput!): Size!
  removeSize(where: SizeWhereUniqueInput!): Size!
  createCustomization(data: CustomizationCreateInput!): Customization!
  updateCustomization(data: CustomizationUpdateInput!, where: CustomizationWhereUniqueInput!): Customization!
  removeCustomization(where: CustomizationWhereUniqueInput!): Customization!
}

input UserCreateInput {
  id: String
  email: String!
  name: String
  password: String!
}

input UserUpdateInput {
  id: String
  email: String
  name: String
  password: String
}

input HomeBlockCreateInput {
  id: String
  title: String!
  description: String!
  button: String!
  imagePath: String!
  navigationPath: String!
  rgbBackground: RgbBackgroundCreateNestedOneWithoutHomeBlockInput!
}

input RgbBackgroundCreateNestedOneWithoutHomeBlockInput {
  create: RgbBackgroundCreateWithoutHomeBlockInput
  connectOrCreate: RgbBackgroundCreateOrConnectWithoutHomeBlockInput
  connect: RgbBackgroundWhereUniqueInput
}

input RgbBackgroundCreateWithoutHomeBlockInput {
  id: String
  r: Int!
  g: Int!
  b: Int!
  a: Float
  hash: String
}

input RgbBackgroundCreateOrConnectWithoutHomeBlockInput {
  where: RgbBackgroundWhereUniqueInput!
  create: RgbBackgroundCreateWithoutHomeBlockInput!
}

input RgbBackgroundWhereUniqueInput {
  id: String
  AND: [RgbBackgroundWhereInput!]
  OR: [RgbBackgroundWhereInput!]
  NOT: [RgbBackgroundWhereInput!]
  r: IntFilter
  g: IntFilter
  b: IntFilter
  a: FloatFilter
  hash: StringFilter
  homeBlock: HomeBlockRelationFilter
}

input HomeBlockUpdateInput {
  id: String
  title: String
  description: String
  button: String
  imagePath: String
  navigationPath: String
  rgbBackground: RgbBackgroundUpdateOneRequiredWithoutHomeBlockNestedInput
}

input RgbBackgroundUpdateOneRequiredWithoutHomeBlockNestedInput {
  create: RgbBackgroundCreateWithoutHomeBlockInput
  connectOrCreate: RgbBackgroundCreateOrConnectWithoutHomeBlockInput
  upsert: RgbBackgroundUpsertWithoutHomeBlockInput
  connect: RgbBackgroundWhereUniqueInput
  update: RgbBackgroundUpdateToOneWithWhereWithoutHomeBlockInput
}

input RgbBackgroundUpsertWithoutHomeBlockInput {
  update: RgbBackgroundUpdateWithoutHomeBlockInput!
  create: RgbBackgroundCreateWithoutHomeBlockInput!
  where: RgbBackgroundWhereInput
}

input RgbBackgroundUpdateWithoutHomeBlockInput {
  id: String
  r: Int
  g: Int
  b: Int
  a: Float
  hash: String
}

input RgbBackgroundUpdateToOneWithWhereWithoutHomeBlockInput {
  where: RgbBackgroundWhereInput
  data: RgbBackgroundUpdateWithoutHomeBlockInput!
}

input LoginInput {
  email: String!
  password: String!
}

input SignUpInput {
  email: String!
  name: String
  password: String!
}

input CategoryCreateInput {
  id: String
  name: String!
  description: String
  subCategories: SubCategoryCreateNestedManyWithoutCategoryInput
}

input SubCategoryCreateNestedManyWithoutCategoryInput {
  create: [SubCategoryCreateWithoutCategoryInput!]
  connectOrCreate: [SubCategoryCreateOrConnectWithoutCategoryInput!]
  createMany: SubCategoryCreateManyCategoryInputEnvelope
  connect: [SubCategoryWhereUniqueInput!]
}

input SubCategoryCreateWithoutCategoryInput {
  id: String
  name: String!
  path: String
  image_path: String
  description: String
  menuItems: MenuItemCreateNestedManyWithoutSubCategoryInput
}

input MenuItemCreateNestedManyWithoutSubCategoryInput {
  create: [MenuItemCreateWithoutSubCategoryInput!]
  connectOrCreate: [MenuItemCreateOrConnectWithoutSubCategoryInput!]
  createMany: MenuItemCreateManySubCategoryInputEnvelope
  connect: [MenuItemWhereUniqueInput!]
}

input MenuItemCreateWithoutSubCategoryInput {
  id: String
  name: String!
  description: String
  image_path: String
  calories: Int
  sizes: SizeCreateNestedManyWithoutMenuItemInput
  customizations: CustomizationCreateNestedManyWithoutMenuItemInput
}

input SizeCreateNestedManyWithoutMenuItemInput {
  create: [SizeCreateWithoutMenuItemInput!]
  connectOrCreate: [SizeCreateOrConnectWithoutMenuItemInput!]
  createMany: SizeCreateManyMenuItemInputEnvelope
  connect: [SizeWhereUniqueInput!]
}

input SizeCreateWithoutMenuItemInput {
  id: String
  name: String!
  volume: Int!
}

input SizeCreateOrConnectWithoutMenuItemInput {
  where: SizeWhereUniqueInput!
  create: SizeCreateWithoutMenuItemInput!
}

input SizeCreateManyMenuItemInputEnvelope {
  data: [SizeCreateManyMenuItemInput!]!
  skipDuplicates: Boolean
}

input SizeCreateManyMenuItemInput {
  id: String
  name: String!
  volume: Int!
}

input CustomizationCreateNestedManyWithoutMenuItemInput {
  create: [CustomizationCreateWithoutMenuItemInput!]
  connectOrCreate: [CustomizationCreateOrConnectWithoutMenuItemInput!]
  createMany: CustomizationCreateManyMenuItemInputEnvelope
  connect: [CustomizationWhereUniqueInput!]
}

input CustomizationCreateWithoutMenuItemInput {
  id: String
  coffeeType: String!
  coffeeStrengthType: Int!
  milkType: String!
  milkTemp: String!
}

input CustomizationCreateOrConnectWithoutMenuItemInput {
  where: CustomizationWhereUniqueInput!
  create: CustomizationCreateWithoutMenuItemInput!
}

input CustomizationCreateManyMenuItemInputEnvelope {
  data: [CustomizationCreateManyMenuItemInput!]!
  skipDuplicates: Boolean
}

input CustomizationCreateManyMenuItemInput {
  id: String
  coffeeType: String!
  coffeeStrengthType: Int!
  milkType: String!
  milkTemp: String!
}

input MenuItemCreateOrConnectWithoutSubCategoryInput {
  where: MenuItemWhereUniqueInput!
  create: MenuItemCreateWithoutSubCategoryInput!
}

input MenuItemCreateManySubCategoryInputEnvelope {
  data: [MenuItemCreateManySubCategoryInput!]!
  skipDuplicates: Boolean
}

input MenuItemCreateManySubCategoryInput {
  id: String
  name: String!
  description: String
  image_path: String
  calories: Int
}

input SubCategoryCreateOrConnectWithoutCategoryInput {
  where: SubCategoryWhereUniqueInput!
  create: SubCategoryCreateWithoutCategoryInput!
}

input SubCategoryCreateManyCategoryInputEnvelope {
  data: [SubCategoryCreateManyCategoryInput!]!
  skipDuplicates: Boolean
}

input SubCategoryCreateManyCategoryInput {
  id: String
  name: String!
  path: String
  image_path: String
  description: String
}

input CategoryUpdateInput {
  id: String
  name: String
  description: String
  subCategories: SubCategoryUpdateManyWithoutCategoryNestedInput
}

input SubCategoryUpdateManyWithoutCategoryNestedInput {
  create: [SubCategoryCreateWithoutCategoryInput!]
  connectOrCreate: [SubCategoryCreateOrConnectWithoutCategoryInput!]
  upsert: [SubCategoryUpsertWithWhereUniqueWithoutCategoryInput!]
  createMany: SubCategoryCreateManyCategoryInputEnvelope
  set: [SubCategoryWhereUniqueInput!]
  disconnect: [SubCategoryWhereUniqueInput!]
  delete: [SubCategoryWhereUniqueInput!]
  connect: [SubCategoryWhereUniqueInput!]
  update: [SubCategoryUpdateWithWhereUniqueWithoutCategoryInput!]
  updateMany: [SubCategoryUpdateManyWithWhereWithoutCategoryInput!]
  deleteMany: [SubCategoryScalarWhereInput!]
}

input SubCategoryUpsertWithWhereUniqueWithoutCategoryInput {
  where: SubCategoryWhereUniqueInput!
  update: SubCategoryUpdateWithoutCategoryInput!
  create: SubCategoryCreateWithoutCategoryInput!
}

input SubCategoryUpdateWithoutCategoryInput {
  id: String
  name: String
  path: String
  image_path: String
  description: String
  menuItems: MenuItemUpdateManyWithoutSubCategoryNestedInput
}

input MenuItemUpdateManyWithoutSubCategoryNestedInput {
  create: [MenuItemCreateWithoutSubCategoryInput!]
  connectOrCreate: [MenuItemCreateOrConnectWithoutSubCategoryInput!]
  upsert: [MenuItemUpsertWithWhereUniqueWithoutSubCategoryInput!]
  createMany: MenuItemCreateManySubCategoryInputEnvelope
  set: [MenuItemWhereUniqueInput!]
  disconnect: [MenuItemWhereUniqueInput!]
  delete: [MenuItemWhereUniqueInput!]
  connect: [MenuItemWhereUniqueInput!]
  update: [MenuItemUpdateWithWhereUniqueWithoutSubCategoryInput!]
  updateMany: [MenuItemUpdateManyWithWhereWithoutSubCategoryInput!]
  deleteMany: [MenuItemScalarWhereInput!]
}

input MenuItemUpsertWithWhereUniqueWithoutSubCategoryInput {
  where: MenuItemWhereUniqueInput!
  update: MenuItemUpdateWithoutSubCategoryInput!
  create: MenuItemCreateWithoutSubCategoryInput!
}

input MenuItemUpdateWithoutSubCategoryInput {
  id: String
  name: String
  description: String
  image_path: String
  calories: Int
  sizes: SizeUpdateManyWithoutMenuItemNestedInput
  customizations: CustomizationUpdateManyWithoutMenuItemNestedInput
}

input SizeUpdateManyWithoutMenuItemNestedInput {
  create: [SizeCreateWithoutMenuItemInput!]
  connectOrCreate: [SizeCreateOrConnectWithoutMenuItemInput!]
  upsert: [SizeUpsertWithWhereUniqueWithoutMenuItemInput!]
  createMany: SizeCreateManyMenuItemInputEnvelope
  set: [SizeWhereUniqueInput!]
  disconnect: [SizeWhereUniqueInput!]
  delete: [SizeWhereUniqueInput!]
  connect: [SizeWhereUniqueInput!]
  update: [SizeUpdateWithWhereUniqueWithoutMenuItemInput!]
  updateMany: [SizeUpdateManyWithWhereWithoutMenuItemInput!]
  deleteMany: [SizeScalarWhereInput!]
}

input SizeUpsertWithWhereUniqueWithoutMenuItemInput {
  where: SizeWhereUniqueInput!
  update: SizeUpdateWithoutMenuItemInput!
  create: SizeCreateWithoutMenuItemInput!
}

input SizeUpdateWithoutMenuItemInput {
  id: String
  name: String
  volume: Int
}

input SizeUpdateWithWhereUniqueWithoutMenuItemInput {
  where: SizeWhereUniqueInput!
  data: SizeUpdateWithoutMenuItemInput!
}

input SizeUpdateManyWithWhereWithoutMenuItemInput {
  where: SizeScalarWhereInput!
  data: SizeUpdateManyMutationInput!
}

input SizeScalarWhereInput {
  AND: [SizeScalarWhereInput!]
  OR: [SizeScalarWhereInput!]
  NOT: [SizeScalarWhereInput!]
  id: StringFilter
  name: StringFilter
  volume: IntFilter
  menuItemId: StringFilter
}

input SizeUpdateManyMutationInput {
  id: String
  name: String
  volume: Int
}

input CustomizationUpdateManyWithoutMenuItemNestedInput {
  create: [CustomizationCreateWithoutMenuItemInput!]
  connectOrCreate: [CustomizationCreateOrConnectWithoutMenuItemInput!]
  upsert: [CustomizationUpsertWithWhereUniqueWithoutMenuItemInput!]
  createMany: CustomizationCreateManyMenuItemInputEnvelope
  set: [CustomizationWhereUniqueInput!]
  disconnect: [CustomizationWhereUniqueInput!]
  delete: [CustomizationWhereUniqueInput!]
  connect: [CustomizationWhereUniqueInput!]
  update: [CustomizationUpdateWithWhereUniqueWithoutMenuItemInput!]
  updateMany: [CustomizationUpdateManyWithWhereWithoutMenuItemInput!]
  deleteMany: [CustomizationScalarWhereInput!]
}

input CustomizationUpsertWithWhereUniqueWithoutMenuItemInput {
  where: CustomizationWhereUniqueInput!
  update: CustomizationUpdateWithoutMenuItemInput!
  create: CustomizationCreateWithoutMenuItemInput!
}

input CustomizationUpdateWithoutMenuItemInput {
  id: String
  coffeeType: String
  coffeeStrengthType: Int
  milkType: String
  milkTemp: String
}

input CustomizationUpdateWithWhereUniqueWithoutMenuItemInput {
  where: CustomizationWhereUniqueInput!
  data: CustomizationUpdateWithoutMenuItemInput!
}

input CustomizationUpdateManyWithWhereWithoutMenuItemInput {
  where: CustomizationScalarWhereInput!
  data: CustomizationUpdateManyMutationInput!
}

input CustomizationScalarWhereInput {
  AND: [CustomizationScalarWhereInput!]
  OR: [CustomizationScalarWhereInput!]
  NOT: [CustomizationScalarWhereInput!]
  id: StringFilter
  coffeeType: StringFilter
  coffeeStrengthType: IntFilter
  milkType: StringFilter
  milkTemp: StringFilter
  menuItemId: StringFilter
}

input CustomizationUpdateManyMutationInput {
  id: String
  coffeeType: String
  coffeeStrengthType: Int
  milkType: String
  milkTemp: String
}

input MenuItemUpdateWithWhereUniqueWithoutSubCategoryInput {
  where: MenuItemWhereUniqueInput!
  data: MenuItemUpdateWithoutSubCategoryInput!
}

input MenuItemUpdateManyWithWhereWithoutSubCategoryInput {
  where: MenuItemScalarWhereInput!
  data: MenuItemUpdateManyMutationInput!
}

input MenuItemScalarWhereInput {
  AND: [MenuItemScalarWhereInput!]
  OR: [MenuItemScalarWhereInput!]
  NOT: [MenuItemScalarWhereInput!]
  id: StringFilter
  name: StringFilter
  description: StringFilter
  image_path: StringFilter
  calories: IntFilter
  subCategoryId: StringFilter
}

input MenuItemUpdateManyMutationInput {
  id: String
  name: String
  description: String
  image_path: String
  calories: Int
}

input SubCategoryUpdateWithWhereUniqueWithoutCategoryInput {
  where: SubCategoryWhereUniqueInput!
  data: SubCategoryUpdateWithoutCategoryInput!
}

input SubCategoryUpdateManyWithWhereWithoutCategoryInput {
  where: SubCategoryScalarWhereInput!
  data: SubCategoryUpdateManyMutationInput!
}

input SubCategoryScalarWhereInput {
  AND: [SubCategoryScalarWhereInput!]
  OR: [SubCategoryScalarWhereInput!]
  NOT: [SubCategoryScalarWhereInput!]
  id: StringFilter
  name: StringFilter
  path: StringFilter
  image_path: StringFilter
  description: StringFilter
  categoryId: StringFilter
}

input SubCategoryUpdateManyMutationInput {
  id: String
  name: String
  path: String
  image_path: String
  description: String
}

input MenuItemCreateInput {
  id: String
  name: String!
  description: String
  image_path: String
  calories: Int
  subCategory: SubCategoryCreateNestedOneWithoutMenuItemsInput!
  sizes: SizeCreateNestedManyWithoutMenuItemInput
  customizations: CustomizationCreateNestedManyWithoutMenuItemInput
}

input SubCategoryCreateNestedOneWithoutMenuItemsInput {
  create: SubCategoryCreateWithoutMenuItemsInput
  connectOrCreate: SubCategoryCreateOrConnectWithoutMenuItemsInput
  connect: SubCategoryWhereUniqueInput
}

input SubCategoryCreateWithoutMenuItemsInput {
  id: String
  name: String!
  path: String
  image_path: String
  description: String
  category: CategoryCreateNestedOneWithoutSubCategoriesInput!
}

input CategoryCreateNestedOneWithoutSubCategoriesInput {
  create: CategoryCreateWithoutSubCategoriesInput
  connectOrCreate: CategoryCreateOrConnectWithoutSubCategoriesInput
  connect: CategoryWhereUniqueInput
}

input CategoryCreateWithoutSubCategoriesInput {
  id: String
  name: String!
  description: String
}

input CategoryCreateOrConnectWithoutSubCategoriesInput {
  where: CategoryWhereUniqueInput!
  create: CategoryCreateWithoutSubCategoriesInput!
}

input SubCategoryCreateOrConnectWithoutMenuItemsInput {
  where: SubCategoryWhereUniqueInput!
  create: SubCategoryCreateWithoutMenuItemsInput!
}

input MenuItemUpdateInput {
  id: String
  name: String
  description: String
  image_path: String
  calories: Int
  subCategory: SubCategoryUpdateOneRequiredWithoutMenuItemsNestedInput
  sizes: SizeUpdateManyWithoutMenuItemNestedInput
  customizations: CustomizationUpdateManyWithoutMenuItemNestedInput
}

input SubCategoryUpdateOneRequiredWithoutMenuItemsNestedInput {
  create: SubCategoryCreateWithoutMenuItemsInput
  connectOrCreate: SubCategoryCreateOrConnectWithoutMenuItemsInput
  upsert: SubCategoryUpsertWithoutMenuItemsInput
  connect: SubCategoryWhereUniqueInput
  update: SubCategoryUpdateToOneWithWhereWithoutMenuItemsInput
}

input SubCategoryUpsertWithoutMenuItemsInput {
  update: SubCategoryUpdateWithoutMenuItemsInput!
  create: SubCategoryCreateWithoutMenuItemsInput!
  where: SubCategoryWhereInput
}

input SubCategoryUpdateWithoutMenuItemsInput {
  id: String
  name: String
  path: String
  image_path: String
  description: String
  category: CategoryUpdateOneRequiredWithoutSubCategoriesNestedInput
}

input CategoryUpdateOneRequiredWithoutSubCategoriesNestedInput {
  create: CategoryCreateWithoutSubCategoriesInput
  connectOrCreate: CategoryCreateOrConnectWithoutSubCategoriesInput
  upsert: CategoryUpsertWithoutSubCategoriesInput
  connect: CategoryWhereUniqueInput
  update: CategoryUpdateToOneWithWhereWithoutSubCategoriesInput
}

input CategoryUpsertWithoutSubCategoriesInput {
  update: CategoryUpdateWithoutSubCategoriesInput!
  create: CategoryCreateWithoutSubCategoriesInput!
  where: CategoryWhereInput
}

input CategoryUpdateWithoutSubCategoriesInput {
  id: String
  name: String
  description: String
}

input CategoryUpdateToOneWithWhereWithoutSubCategoriesInput {
  where: CategoryWhereInput
  data: CategoryUpdateWithoutSubCategoriesInput!
}

input SubCategoryUpdateToOneWithWhereWithoutMenuItemsInput {
  where: SubCategoryWhereInput
  data: SubCategoryUpdateWithoutMenuItemsInput!
}

input SubCategoryCreateInput {
  id: String
  name: String!
  path: String
  image_path: String
  description: String
  category: CategoryCreateNestedOneWithoutSubCategoriesInput!
  menuItems: MenuItemCreateNestedManyWithoutSubCategoryInput
}

input SubCategoryUpdateInput {
  id: String
  name: String
  path: String
  image_path: String
  description: String
  category: CategoryUpdateOneRequiredWithoutSubCategoriesNestedInput
  menuItems: MenuItemUpdateManyWithoutSubCategoryNestedInput
}

input SizeCreateInput {
  id: String
  name: String!
  volume: Int!
  menuItem: MenuItemCreateNestedOneWithoutSizesInput!
}

input MenuItemCreateNestedOneWithoutSizesInput {
  create: MenuItemCreateWithoutSizesInput
  connectOrCreate: MenuItemCreateOrConnectWithoutSizesInput
  connect: MenuItemWhereUniqueInput
}

input MenuItemCreateWithoutSizesInput {
  id: String
  name: String!
  description: String
  image_path: String
  calories: Int
  subCategory: SubCategoryCreateNestedOneWithoutMenuItemsInput!
  customizations: CustomizationCreateNestedManyWithoutMenuItemInput
}

input MenuItemCreateOrConnectWithoutSizesInput {
  where: MenuItemWhereUniqueInput!
  create: MenuItemCreateWithoutSizesInput!
}

input SizeUpdateInput {
  id: String
  name: String
  volume: Int
  menuItem: MenuItemUpdateOneRequiredWithoutSizesNestedInput
}

input MenuItemUpdateOneRequiredWithoutSizesNestedInput {
  create: MenuItemCreateWithoutSizesInput
  connectOrCreate: MenuItemCreateOrConnectWithoutSizesInput
  upsert: MenuItemUpsertWithoutSizesInput
  connect: MenuItemWhereUniqueInput
  update: MenuItemUpdateToOneWithWhereWithoutSizesInput
}

input MenuItemUpsertWithoutSizesInput {
  update: MenuItemUpdateWithoutSizesInput!
  create: MenuItemCreateWithoutSizesInput!
  where: MenuItemWhereInput
}

input MenuItemUpdateWithoutSizesInput {
  id: String
  name: String
  description: String
  image_path: String
  calories: Int
  subCategory: SubCategoryUpdateOneRequiredWithoutMenuItemsNestedInput
  customizations: CustomizationUpdateManyWithoutMenuItemNestedInput
}

input MenuItemUpdateToOneWithWhereWithoutSizesInput {
  where: MenuItemWhereInput
  data: MenuItemUpdateWithoutSizesInput!
}

input CustomizationCreateInput {
  id: String
  coffeeType: String!
  coffeeStrengthType: Int!
  milkType: String!
  milkTemp: String!
  menuItem: MenuItemCreateNestedOneWithoutCustomizationsInput!
}

input MenuItemCreateNestedOneWithoutCustomizationsInput {
  create: MenuItemCreateWithoutCustomizationsInput
  connectOrCreate: MenuItemCreateOrConnectWithoutCustomizationsInput
  connect: MenuItemWhereUniqueInput
}

input MenuItemCreateWithoutCustomizationsInput {
  id: String
  name: String!
  description: String
  image_path: String
  calories: Int
  subCategory: SubCategoryCreateNestedOneWithoutMenuItemsInput!
  sizes: SizeCreateNestedManyWithoutMenuItemInput
}

input MenuItemCreateOrConnectWithoutCustomizationsInput {
  where: MenuItemWhereUniqueInput!
  create: MenuItemCreateWithoutCustomizationsInput!
}

input CustomizationUpdateInput {
  id: String
  coffeeType: String
  coffeeStrengthType: Int
  milkType: String
  milkTemp: String
  menuItem: MenuItemUpdateOneRequiredWithoutCustomizationsNestedInput
}

input MenuItemUpdateOneRequiredWithoutCustomizationsNestedInput {
  create: MenuItemCreateWithoutCustomizationsInput
  connectOrCreate: MenuItemCreateOrConnectWithoutCustomizationsInput
  upsert: MenuItemUpsertWithoutCustomizationsInput
  connect: MenuItemWhereUniqueInput
  update: MenuItemUpdateToOneWithWhereWithoutCustomizationsInput
}

input MenuItemUpsertWithoutCustomizationsInput {
  update: MenuItemUpdateWithoutCustomizationsInput!
  create: MenuItemCreateWithoutCustomizationsInput!
  where: MenuItemWhereInput
}

input MenuItemUpdateWithoutCustomizationsInput {
  id: String
  name: String
  description: String
  image_path: String
  calories: Int
  subCategory: SubCategoryUpdateOneRequiredWithoutMenuItemsNestedInput
  sizes: SizeUpdateManyWithoutMenuItemNestedInput
}

input MenuItemUpdateToOneWithWhereWithoutCustomizationsInput {
  where: MenuItemWhereInput
  data: MenuItemUpdateWithoutCustomizationsInput!
}